{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["PlayerRank","name","hasKitten","gotKitten","App","ranking","inputKittenFrom","undefined","inputKittenTo","db","firebase","firestore","onKitten","playerFrom","find","i","playerTo","push","playerFromRef","collection","doc","get","then","exists","set","update","FieldValue","increment","playerToRef","sortRanking","message","players","attached","querySnapshot","forEach","playerStats","data","id","populate","player","sort","a","b","difference","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","environment","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEMA,qBAOH,oCAAa,WAAb,EAA0B,WAA1B;AAND,wBAAYC,IAAZ,EAAkBC,SAAlB,EAA6BC,SAA7B,EAAwC;AAAA;;AACtC,WAAKF,IAAL,GAAYA,IAAZ;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACD;;;;0BAGgB;AACf,eAAO,KAAKD,SAAL,GAAiB,KAAKC,SAA7B;AACD;;;;;;MAGUC,cAAAA;AAOX,mBAAc;AAAA;;AAAA;;AAAA,WALdC,OAKc,GALJ,EAKI;AAAA,WAJdC,eAIc,GAJIC,SAIJ;AAAA,WAHdC,aAGc,GAHED,SAGF;AAAA,WAFdE,EAEc,GAFTC,SAASC,SAAT,EAES;;AAAA,WAmBdC,QAnBc,GAmBH,YAAM;AACf,YAAIC,aAAa,MAAKR,OAAL,CAAaS,IAAb,CAAkB;AAAA,iBAAKC,EAAEd,IAAF,KAAW,MAAKK,eAArB;AAAA,SAAlB,CAAjB;AACA,YAAIU,WAAW,MAAKX,OAAL,CAAaS,IAAb,CAAkB;AAAA,iBAAKC,EAAEd,IAAF,KAAW,MAAKO,aAArB;AAAA,SAAlB,CAAf;;AAEA,YAAI,MAAKF,eAAL,KAAyB,MAAKE,aAAlC,EAAiD;AAAE;AAAS;;AAE5D,YAAIK,UAAJ,EAAgB;AACdA,qBAAWX,SAAX;AACD,SAFD,MAEO;AACLW,uBAAa,IAAIb,UAAJ,CAAe,MAAKM,eAApB,EAAqC,CAArC,EAAwC,CAAxC,CAAb;AACA,gBAAKD,OAAL,CAAaY,IAAb,CAAkBJ,UAAlB;;AAEA,cAAIK,gBAAgB,MAAKT,EAAL,CAAQU,UAAR,CAAmB,SAAnB,EAA8BC,GAA9B,CAAkCP,WAAWZ,IAA7C,CAApB;;AAEAiB,wBAAcG,GAAd,GAAoBC,IAApB,CAAyB,eAAO;AAC9B,gBAAI,CAACF,IAAIG,MAAT,EAAiB;AACfL,4BAAcM,GAAd,CAAkB,EAAEtB,WAAW,CAAb,EAAgBC,WAAW,CAA3B,EAAlB;AACD,aAFD,MAEO;AACLe,4BAAcO,MAAd,CAAqB,EAAEvB,WAAWQ,SAASC,SAAT,CAAmBe,UAAnB,CAA8BC,SAA9B,CAAwC,CAAxC,CAAb,EAArB;AACD;AACF,WAND;AAOD;;AAED,YAAIX,QAAJ,EAAc;AACZA,mBAASb,SAAT;AACD,SAFD,MAEO;AACLa,qBAAW,IAAIhB,UAAJ,CAAe,MAAKQ,aAApB,EAAmC,CAAnC,EAAsC,CAAtC,CAAX;AACA,gBAAKH,OAAL,CAAaY,IAAb,CAAkBD,QAAlB;;AAEA,cAAIY,cAAc,MAAKnB,EAAL,CAAQU,UAAR,CAAmB,SAAnB,EAA8BC,GAA9B,CAAkCJ,SAASf,IAA3C,CAAlB;;AAEA2B,sBAAYP,GAAZ,GAAkBC,IAAlB,CAAuB,eAAO;AAC5B,gBAAI,CAACF,IAAIG,MAAT,EAAiB;AACfK,0BAAYJ,GAAZ,CAAgB,EAAEtB,WAAW,CAAb,EAAgBC,WAAW,CAA3B,EAAhB;AACD,aAFD,MAEO;AACLyB,0BAAYH,MAAZ,CAAmB,EAAEtB,WAAWO,SAASC,SAAT,CAAmBe,UAAnB,CAA8BC,SAA9B,CAAwC,CAAxC,CAAb,EAAnB;AACD;AACD,kBAAKE,WAAL;AACD,WAPD;AAQD;AACF,OA3Da;;AACZ,WAAKC,OAAL,GAAe,cAAf;AACA,WAAKC,OAAL,GAAe,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,QAAvC,CAAf;AACD;;kBAEDC,+BAAW;AAAA;;AACT,WAAKvB,EAAL,CAAQU,UAAR,CAAmB,SAAnB,EAA8BE,GAA9B,GAAoCC,IAApC,CAAyC,yBAAiB;AACxDW,sBAAcC,OAAd,CAAsB,eAAO;AAC3B,cAAMC,cAAcf,IAAIgB,IAAJ,EAApB;AACA,iBAAK/B,OAAL,CAAaY,IAAb,CAAkB,IAAIjB,UAAJ,CAAeoB,IAAIiB,EAAnB,EAAuBF,YAAYjC,SAAnC,EAA8CiC,YAAYhC,SAA1D,CAAlB;AACA,iBAAK0B,WAAL;AACD,SAJD;AAKD,OAND;AAOD;;kBAEDS,+BAAW;AAAA;;AACT,WAAKP,OAAL,CAAaG,OAAb,CAAqB;AAAA,eAAU,OAAK7B,OAAL,CAAaY,IAAb,CAAkB,IAAIjB,UAAJ,CAAeuC,MAAf,EAAuB,CAAvB,EAA0B,CAA1B,CAAlB,CAAV;AAAA,OAArB;AACD;;kBA4CDV,qCAAc;AACZ,WAAKxB,OAAL,CAAamC,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,EAAEC,UAAF,GAAeF,EAAEE,UAA3B;AAAA,OAAlB;AACD;;;;;;;;;;;oBCrFY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAIC,sBAAYX,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYI,kBAAZ;AACD;;AAED,QAAID,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYK,MAAZ,CAAmB,iBAAnB;AACD;;AAEDN,YAAQO,KAAR,GAAgBpC,IAAhB,CAAqB;AAAA,aAAM6B,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import { computedFrom } from 'aurelia-framework';\n\nclass PlayerRank {\n  constructor(name, hasKitten, gotKitten) {\n    this.name = name;\n    this.hasKitten = hasKitten;\n    this.gotKitten = gotKitten;\n  }\n\n  @computedFrom('hasKitten', 'gotKitten')\n  get difference() {\n    return this.hasKitten - this.gotKitten;\n  }\n}\n\nexport class App {\n\n  ranking = [];\n  inputKittenFrom = undefined;\n  inputKittenTo = undefined;\n  db = firebase.firestore();\n\n  constructor() {\n    this.message = 'Hello World!';\n    this.players = ['JB', 'Alex', 'Paul', 'Dave', 'Domi', 'Angela'];\n  }\n\n  attached() {\n    this.db.collection('players').get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        const playerStats = doc.data();\n        this.ranking.push(new PlayerRank(doc.id, playerStats.hasKitten, playerStats.gotKitten));\n        this.sortRanking();\n      });\n    });\n  }\n\n  populate() {\n    this.players.forEach(player => this.ranking.push(new PlayerRank(player, 0, 0)));\n  }\n\n  onKitten = () => {\n    let playerFrom = this.ranking.find(i => i.name === this.inputKittenFrom);\n    let playerTo = this.ranking.find(i => i.name === this.inputKittenTo);\n\n    if (this.inputKittenFrom === this.inputKittenTo) { return; }\n\n    if (playerFrom) {\n      playerFrom.hasKitten++;\n    } else {\n      playerFrom = new PlayerRank(this.inputKittenFrom, 1, 0);\n      this.ranking.push(playerFrom);\n\n      let playerFromRef = this.db.collection('players').doc(playerFrom.name);\n\n      playerFromRef.get().then(doc => {\n        if (!doc.exists) {\n          playerFromRef.set({ hasKitten: 1, gotKitten: 0 });\n        } else {\n          playerFromRef.update({ hasKitten: firebase.firestore.FieldValue.increment(1) });\n        }\n      });\n    }\n\n    if (playerTo) {\n      playerTo.gotKitten++;\n    } else {\n      playerTo = new PlayerRank(this.inputKittenTo, 0, 1);\n      this.ranking.push(playerTo);\n\n      let playerToRef = this.db.collection('players').doc(playerTo.name);\n\n      playerToRef.get().then(doc => {\n        if (!doc.exists) {\n          playerToRef.set({ hasKitten: 0, gotKitten: 1 });\n        } else {\n          playerToRef.update({ gotKitten: firebase.firestore.FieldValue.increment(1) });\n        }\n        this.sortRanking();\n      });\n    }\n  }\n\n  sortRanking() {\n    this.ranking.sort((a, b) => b.difference - a.difference);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}